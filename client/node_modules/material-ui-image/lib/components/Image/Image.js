'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _CircularProgress = require('@material-ui/core/CircularProgress');

var _CircularProgress2 = _interopRequireDefault(_CircularProgress);

var _common = require('@material-ui/core/colors/common');

var _common2 = _interopRequireDefault(_common);

var _grey = require('@material-ui/core/colors/grey');

var _grey2 = _interopRequireDefault(_grey);

var _BrokenImage = require('@material-ui/icons/BrokenImage');

var _BrokenImage2 = _interopRequireDefault(_BrokenImage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Images are ugly until they're loaded. Materialize it with material image! It will fade in like the material image loading pattern suggests.
 * @see [Image loading patterns](https://material.io/guidelines/patterns/loading-images.html)
 */
var Image = function (_Component) {
  (0, _inherits3.default)(Image, _Component);

  function Image(props) {
    (0, _classCallCheck3.default)(this, Image);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Image.__proto__ || (0, _getPrototypeOf2.default)(Image)).call(this, props));

    _this.handleLoadImage = function () {
      _this.setState({ imageLoaded: true });
      if (_this.props.onLoad) {
        _this.props.onLoad();
      }
    };

    _this.handleImageError = function () {
      if (_this.props.src) {
        _this.setState({ imageError: true });
        if (_this.props.onError) {
          _this.props.onError();
        }
      }
    };

    _this.state = {
      imageError: false,
      imageLoaded: false
    };
    return _this;
  }

  (0, _createClass3.default)(Image, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.src !== nextProps.src) {
        this.setState({
          imageError: false,
          imageLoaded: false
        });
      }
    }
  }, {
    key: 'getStyles',
    value: function getStyles() {
      var _props = this.props,
          animationDuration = _props.animationDuration,
          aspectRatio = _props.aspectRatio,
          color = _props.color,
          imageStyle = _props.imageStyle,
          disableTransition = _props.disableTransition,
          iconContainerStyle = _props.iconContainerStyle,
          style = _props.style;


      var imageTransition = !disableTransition && {
        opacity: this.state.imageLoaded ? 1 : 0,
        filterBrightness: this.state.imageLoaded ? 100 : 0,
        filterSaturate: this.state.imageLoaded ? 100 : 20,
        transition: '\n        filterBrightness ' + animationDuration * 0.75 + 'ms cubic-bezier(0.4, 0.0, 0.2, 1),\n        filterSaturate ' + animationDuration + 'ms cubic-bezier(0.4, 0.0, 0.2, 1),\n        opacity ' + animationDuration / 2 + 'ms cubic-bezier(0.4, 0.0, 0.2, 1)'
      };

      var styles = {
        root: (0, _extends3.default)({
          backgroundColor: color,
          paddingTop: 'calc(1 / ' + aspectRatio + ' * 100%)',
          position: 'relative'
        }, style),
        image: (0, _extends3.default)({
          width: '100%',
          height: '100%',
          position: 'absolute',
          top: 0,
          left: 0
        }, imageTransition, imageStyle),
        iconContainer: (0, _extends3.default)({
          width: '100%',
          height: '100%',
          position: 'absolute',
          top: 0,
          left: 0,
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          pointerEvents: 'none'
        }, iconContainerStyle)
      };

      return styles;
    }
  }, {
    key: 'render',
    value: function render() {
      var styles = this.getStyles();

      var _props2 = this.props,
          animationDuration = _props2.animationDuration,
          aspectRatio = _props2.aspectRatio,
          color = _props2.color,
          disableError = _props2.disableError,
          disableSpinner = _props2.disableSpinner,
          disableTransition = _props2.disableTransition,
          errorIcon = _props2.errorIcon,
          imageStyle = _props2.imageStyle,
          style = _props2.style,
          loading = _props2.loading,
          onClick = _props2.onClick,
          image = (0, _objectWithoutProperties3.default)(_props2, ['animationDuration', 'aspectRatio', 'color', 'disableError', 'disableSpinner', 'disableTransition', 'errorIcon', 'imageStyle', 'style', 'loading', 'onClick']);


      return _react2.default.createElement(
        'div',
        {
          style: styles.root,
          onClick: onClick
        },
        image.src && _react2.default.createElement('img', (0, _extends3.default)({}, image, {
          style: styles.image,
          onLoad: this.handleLoadImage,
          onError: this.handleImageError
        })),
        _react2.default.createElement(
          'div',
          { style: styles.iconContainer },
          !disableSpinner && !this.state.imageLoaded && !this.state.imageError && loading,
          !disableError && this.state.imageError && errorIcon
        )
      );
    }
  }]);
  return Image;
}(_react.Component);

exports.default = Image;


Image.defaultProps = {
  animationDuration: 3000,
  aspectRatio: 1,
  color: _common2.default.white,
  disableError: false,
  disableSpinner: false,
  disableTransition: false,
  errorIcon: _react2.default.createElement(_BrokenImage2.default, { style: { width: 48, height: 48, color: _grey2.default[300] } }),
  loading: _react2.default.createElement(_CircularProgress2.default, { size: 48 })
};

Image.propTypes = {
  /** Duration of the fading animation, in milliseconds. */
  animationDuration: _propTypes2.default.number,
  /** Override aspect ratio. */
  aspectRatio: _propTypes2.default.number,
  /** Override the background color. */
  color: _propTypes2.default.string,
  /** Disables the error icon if set to true. */
  disableError: _propTypes2.default.bool,
  /** Disables the loading spinner if set to true. */
  disableSpinner: _propTypes2.default.bool,
  /** Disables the transition after load if set to true. */
  disableTransition: _propTypes2.default.bool,
  /** Override the error icon. */
  errorIcon: _propTypes2.default.node,
  /** Override the inline-styles of the container that contains the loading spinner and the error icon. */
  iconContainerStyle: _propTypes2.default.object,
  /** Override the inline-styles of the image. */
  imageStyle: _propTypes2.default.object,
  /** Override the loading component. */
  loading: _propTypes2.default.node,
  /** Fired when the user clicks on the image happened. */
  onClick: _propTypes2.default.func,
  /** Fired when the image failed to load. */
  onError: _propTypes2.default.func,
  /** Fired when the image finished loading. */
  onLoad: _propTypes2.default.func,
  /** Specifies the URL of an image. */
  src: _propTypes2.default.string.isRequired,
  /** Override the inline-styles of the root element. */
  style: _propTypes2.default.object
};