{"ast":null,"code":"var isWindows = typeof process != 'undefined' && 'win32' === process.platform;\nvar EOL = isWindows ? '\\r\\n' : '\\n';\nvar hits = {};\n\nfunction deprecate(methodName, message) {\n  if (deprecate.silence || hits[methodName]) return;\n  hits[methodName] = true;\n\n  var _deprecate = typeof process === 'undefined' ? browserDeprecate : nodeDeprecate;\n\n  _deprecate(methodName, message);\n}\n\nfunction nodeDeprecate(methodName, message) {\n  deprecate.stream.write(EOL);\n\n  if (deprecate.color) {\n    deprecate.stream.write(deprecate.color);\n  }\n\n  deprecate.stream.write('Warning: ' + methodName + ' has been deprecated.');\n  deprecate.stream.write(EOL);\n\n  for (var i = 1; i < arguments.length; i++) {\n    deprecate.stream.write(arguments[i]);\n    deprecate.stream.write(EOL);\n  }\n\n  if (deprecate.color) {\n    deprecate.stream.write('\\x1b[0m');\n  }\n\n  deprecate.stream.write(EOL);\n  deprecate.stream.write(EOL);\n}\n\n;\n\nfunction browserDeprecate(methodName, message) {\n  console.warn(methodName, ' has been deprecated.');\n\n  for (var i = 1; i < arguments.length; i++) {\n    console.log(arguments[i]);\n  }\n}\n\nif (typeof process !== 'undefined' && typeof process.stderr !== 'undefined') {\n  deprecate.stream = process.stderr;\n  deprecate.color = deprecate.stream.isTTY && '\\x1b[31;1m';\n}\n\ndeprecate.silence = false;\nmodule.exports = deprecate;","map":null,"metadata":{},"sourceType":"script"}