{"ast":null,"code":"var hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nvar isFunction = function (fn) {\n  var isFunc = typeof fn === 'function' && !(fn instanceof RegExp) || toString.call(fn) === '[object Function]';\n\n  if (!isFunc && typeof window !== 'undefined') {\n    isFunc = fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt;\n  }\n\n  return isFunc;\n};\n\nmodule.exports = function forEach(obj, fn) {\n  if (!isFunction(fn)) {\n    throw new TypeError('iterator must be a function');\n  }\n\n  var i,\n      k,\n      isString = typeof obj === 'string',\n      l = obj.length,\n      context = arguments.length > 2 ? arguments[2] : null;\n\n  if (l === +l) {\n    for (i = 0; i < l; i++) {\n      if (context === null) {\n        fn(isString ? obj.charAt(i) : obj[i], i, obj);\n      } else {\n        fn.call(context, isString ? obj.charAt(i) : obj[i], i, obj);\n      }\n    }\n  } else {\n    for (k in obj) {\n      if (hasOwn.call(obj, k)) {\n        if (context === null) {\n          fn(obj[k], k, obj);\n        } else {\n          fn.call(context, obj[k], k, obj);\n        }\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}