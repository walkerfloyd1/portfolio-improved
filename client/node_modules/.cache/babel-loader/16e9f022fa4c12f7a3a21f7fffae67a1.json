{"ast":null,"code":"import _objectSpread from \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/pages/login.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../Components/social/redux/auth';\nimport { Container } from '../Components/styling-components/Container';\nimport { NameInput } from '../Components/styling-components/NameInputComponent';\n\nconst Login = ({\n  login,\n  isAuthenticated\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const email = formData.email,\n        password = formData.password;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return React.createElement(Redirect, {\n      to: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"dark-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Log in to your account\"), React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(InputStyled, {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(InputStyled, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    minLength: \"6\",\n    value: password,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Don't have an account? \", React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Sign up\"))));\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/pages/login.js"],"names":["React","Fragment","useState","Link","Redirect","connect","PropTypes","login","Container","NameInput","Login","isAuthenticated","email","password","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,iCAAtB;AACA,SAASC,SAAT,QAA0B,4CAA1B;AAEA,SAASC,SAAT,QAA0B,qDAA1B;;AAGA,MAAMC,KAAK,GAAG,CAAC;AACXH,EAAAA,KADW;AAEXI,EAAAA;AAFW,CAAD,KAGR;AAAA,oBAC8BT,QAAQ,CAAC;AACrCU,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CADtC;AAAA;AAAA,QACKC,QADL;AAAA,QACeC,WADf;;AAAA,QAOEH,KAPF,GASEE,QATF,CAOEF,KAPF;AAAA,QAQEC,QARF,GASEC,QATF,CAQED,QARF;;AAWF,QAAMG,QAAQ,GAAGC,CAAC,IAAIF,WAAW,mBAC1BD,QAD0B;AAE7B,KAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFG,KAAjC;;AAKA,QAAMC,QAAQ,GAAG,MAAMJ,CAAN,IAAW;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAf,IAAAA,KAAK,CAACK,KAAD,EAAQC,QAAR,CAAL;AACH,GAHD;;AAKA,MAAIF,eAAJ,EAAqB;AACjB,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SACA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJJ,EAOI;AAAM,IAAA,QAAQ,EAAEM,CAAC,IAAII,QAAQ,CAACJ,CAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AACA,IAAA,WAAW,EAAC,eADZ;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,KAAK,EAAEL,KAHP;AAIA,IAAA,QAAQ,EAAEK,CAAC,IAAID,QAAQ,CAACC,CAAD,CAJvB;AAKA,IAAA,QAAQ,MALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AACA,IAAA,IAAI,EAAC,UADL;AAEA,IAAA,WAAW,EAAC,UAFZ;AAGA,IAAA,IAAI,EAAC,UAHL;AAIA,IAAA,SAAS,EAAC,GAJV;AAKA,IAAA,KAAK,EAAEJ,QALP;AAKiB,IAAA,QAAQ,EAAEI,CAAC,IAAID,QAAQ,CAACC,CAAD,CALxC;AAK6C,IAAA,QAAQ,MALrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,EAkBI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,iBAA/B;AAAiD,IAAA,KAAK,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,CAPJ,EA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAC2B,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD3B,CA3BJ,CADJ,CADA;AAmCH,CA9DD;;AAgEAP,KAAK,CAACa,SAAN,GAAkB;AACdhB,EAAAA,KAAK,EAAED,SAAS,CAACkB,IAAV,CAAeC,UADR;AAEdd,EAAAA,eAAe,EAAEL,SAAS,CAACoB;AAFb,CAAlB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BjB,EAAAA,eAAe,EAAEiB,KAAK,CAACC,IAAN,CAAWlB;AADE,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACsB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAAoCG,KAApC,CAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../Components/social/redux/auth';\nimport { Container } from '../Components/styling-components/Container';\n\nimport { NameInput } from '../Components/styling-components/NameInputComponent';\n\n\nconst Login = ({\n    login,\n    isAuthenticated\n}) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const {\n        email, \n        password\n    } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email, password);\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/about\" />\n    }\n    return (\n    <div className=\"dark-overlay\">\n        <Container>\n            <h1>\n                Login\n            </h1>\n            <p>\n                Log in to your account\n            </p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div>\n                    <InputStyled type=\"email\" \n                    placeholder=\"Email Address\" \n                    name=\"email\" \n                    value={email} \n                    onChange={e => onChange(e)} \n                    required/>\n                </div>\n                <div>\n                    <InputStyled\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    minLength=\"6\"\n                    value={password} onChange={e => onChange(e)} required\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p>\n                Don't have an account? <Link to=\"/register\">Sign up</Link>\n            </p>\n        </Container>\n        </div>\n    )\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { login })(Login);\n"]},"metadata":{},"sourceType":"module"}