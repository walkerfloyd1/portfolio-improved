{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _CircularProgress = require('@material-ui/core/CircularProgress');\n\nvar _CircularProgress2 = _interopRequireDefault(_CircularProgress);\n\nvar _common = require('@material-ui/core/colors/common');\n\nvar _common2 = _interopRequireDefault(_common);\n\nvar _grey = require('@material-ui/core/colors/grey');\n\nvar _grey2 = _interopRequireDefault(_grey);\n\nvar _BrokenImage = require('@material-ui/icons/BrokenImage');\n\nvar _BrokenImage2 = _interopRequireDefault(_BrokenImage);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Images are ugly until they're loaded. Materialize it with material image! It will fade in like the material image loading pattern suggests.\n * @see [Image loading patterns](https://material.io/guidelines/patterns/loading-images.html)\n */\n\n\nvar Image = function (_Component) {\n  (0, _inherits3.default)(Image, _Component);\n\n  function Image(props) {\n    (0, _classCallCheck3.default)(this, Image);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Image.__proto__ || (0, _getPrototypeOf2.default)(Image)).call(this, props));\n\n    _this.handleLoadImage = function () {\n      _this.setState({\n        imageLoaded: true\n      });\n\n      if (_this.props.onLoad) {\n        _this.props.onLoad();\n      }\n    };\n\n    _this.handleImageError = function () {\n      if (_this.props.src) {\n        _this.setState({\n          imageError: true\n        });\n\n        if (_this.props.onError) {\n          _this.props.onError();\n        }\n      }\n    };\n\n    _this.state = {\n      imageError: false,\n      imageLoaded: false\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(Image, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.src !== nextProps.src) {\n        this.setState({\n          imageError: false,\n          imageLoaded: false\n        });\n      }\n    }\n  }, {\n    key: 'getStyles',\n    value: function getStyles() {\n      var _props = this.props,\n          animationDuration = _props.animationDuration,\n          aspectRatio = _props.aspectRatio,\n          color = _props.color,\n          imageStyle = _props.imageStyle,\n          disableTransition = _props.disableTransition,\n          iconContainerStyle = _props.iconContainerStyle,\n          style = _props.style;\n      var imageTransition = !disableTransition && {\n        opacity: this.state.imageLoaded ? 1 : 0,\n        filterBrightness: this.state.imageLoaded ? 100 : 0,\n        filterSaturate: this.state.imageLoaded ? 100 : 20,\n        transition: '\\n        filterBrightness ' + animationDuration * 0.75 + 'ms cubic-bezier(0.4, 0.0, 0.2, 1),\\n        filterSaturate ' + animationDuration + 'ms cubic-bezier(0.4, 0.0, 0.2, 1),\\n        opacity ' + animationDuration / 2 + 'ms cubic-bezier(0.4, 0.0, 0.2, 1)'\n      };\n      var styles = {\n        root: (0, _extends3.default)({\n          backgroundColor: color,\n          paddingTop: 'calc(1 / ' + aspectRatio + ' * 100%)',\n          position: 'relative'\n        }, style),\n        image: (0, _extends3.default)({\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          top: 0,\n          left: 0\n        }, imageTransition, imageStyle),\n        iconContainer: (0, _extends3.default)({\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          pointerEvents: 'none'\n        }, iconContainerStyle)\n      };\n      return styles;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var styles = this.getStyles();\n      var _props2 = this.props,\n          animationDuration = _props2.animationDuration,\n          aspectRatio = _props2.aspectRatio,\n          color = _props2.color,\n          disableError = _props2.disableError,\n          disableSpinner = _props2.disableSpinner,\n          disableTransition = _props2.disableTransition,\n          errorIcon = _props2.errorIcon,\n          imageStyle = _props2.imageStyle,\n          style = _props2.style,\n          loading = _props2.loading,\n          onClick = _props2.onClick,\n          image = (0, _objectWithoutProperties3.default)(_props2, ['animationDuration', 'aspectRatio', 'color', 'disableError', 'disableSpinner', 'disableTransition', 'errorIcon', 'imageStyle', 'style', 'loading', 'onClick']);\n      return _react2.default.createElement('div', {\n        style: styles.root,\n        onClick: onClick\n      }, image.src && _react2.default.createElement('img', (0, _extends3.default)({}, image, {\n        style: styles.image,\n        onLoad: this.handleLoadImage,\n        onError: this.handleImageError\n      })), _react2.default.createElement('div', {\n        style: styles.iconContainer\n      }, !disableSpinner && !this.state.imageLoaded && !this.state.imageError && loading, !disableError && this.state.imageError && errorIcon));\n    }\n  }]);\n  return Image;\n}(_react.Component);\n\nexports.default = Image;\nImage.defaultProps = {\n  animationDuration: 3000,\n  aspectRatio: 1,\n  color: _common2.default.white,\n  disableError: false,\n  disableSpinner: false,\n  disableTransition: false,\n  errorIcon: _react2.default.createElement(_BrokenImage2.default, {\n    style: {\n      width: 48,\n      height: 48,\n      color: _grey2.default[300]\n    }\n  }),\n  loading: _react2.default.createElement(_CircularProgress2.default, {\n    size: 48\n  })\n};\nImage.propTypes = {\n  /** Duration of the fading animation, in milliseconds. */\n  animationDuration: _propTypes2.default.number,\n\n  /** Override aspect ratio. */\n  aspectRatio: _propTypes2.default.number,\n\n  /** Override the background color. */\n  color: _propTypes2.default.string,\n\n  /** Disables the error icon if set to true. */\n  disableError: _propTypes2.default.bool,\n\n  /** Disables the loading spinner if set to true. */\n  disableSpinner: _propTypes2.default.bool,\n\n  /** Disables the transition after load if set to true. */\n  disableTransition: _propTypes2.default.bool,\n\n  /** Override the error icon. */\n  errorIcon: _propTypes2.default.node,\n\n  /** Override the inline-styles of the container that contains the loading spinner and the error icon. */\n  iconContainerStyle: _propTypes2.default.object,\n\n  /** Override the inline-styles of the image. */\n  imageStyle: _propTypes2.default.object,\n\n  /** Override the loading component. */\n  loading: _propTypes2.default.node,\n\n  /** Fired when the user clicks on the image happened. */\n  onClick: _propTypes2.default.func,\n\n  /** Fired when the image failed to load. */\n  onError: _propTypes2.default.func,\n\n  /** Fired when the image finished loading. */\n  onLoad: _propTypes2.default.func,\n\n  /** Specifies the URL of an image. */\n  src: _propTypes2.default.string.isRequired,\n\n  /** Override the inline-styles of the root element. */\n  style: _propTypes2.default.object\n};","map":null,"metadata":{},"sourceType":"script"}