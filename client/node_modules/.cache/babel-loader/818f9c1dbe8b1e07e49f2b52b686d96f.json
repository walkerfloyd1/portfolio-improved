{"ast":null,"code":"var _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/post/CommentItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../redux/post';\n\nconst CommentItem = ({\n  postId,\n  comment: {\n    _id,\n    text,\n    name,\n    user,\n    date\n  },\n  auth,\n  deleteComment\n}) => {\n  return React.createElement(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    style: {\n      width: '500px',\n      background: '#C6C5C4',\n      maxHeight: '400px',\n      overflow: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profile/\".concat(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    class: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    class: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, date)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n    onClick: e => deleteComment(postId, _id),\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/post/CommentItem.js"],"names":["React","Fragment","PropTypes","connect","Link","Moment","deleteComment","CommentItem","postId","comment","_id","text","name","user","date","auth","width","background","maxHeight","overflow","loading","e","propTypes","number","isRequired","object","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,aAAT,QAA8B,eAA9B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACjBC,EAAAA,MADiB;AAEjBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,GADK;AAELC,IAAAA,IAFK;AAGLC,IAAAA,IAHK;AAILC,IAAAA,IAJK;AAKLC,IAAAA;AALK,GAFQ;AASjBC,EAAAA,IATiB;AAUjBT,EAAAA;AAViB,CAAD,KAWd;AACF,SACI;AAAK,IAAA,KAAK,EAAC,wBAAX;AAAoC,IAAA,KAAK,EAAE;AACzCU,MAAAA,KAAK,EAAE,OADkC;AAEzCC,MAAAA,UAAU,EAAE,SAF6B;AAGzCC,MAAAA,SAAS,EAAE,OAH8B;AAIzCC,MAAAA,QAAQ,EAAE;AAJ+B,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,qBAAcN,IAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CADF,CADF,CANF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IADH,CADF,EAIG;AAAG,IAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BG,IAA7B,CADb,CAJH,EASG,CAACC,IAAI,CAACK,OAAN,IAAiBP,IAAI,KAAKE,IAAI,CAACF,IAAL,CAAUH,GAApC,IACG;AAAQ,IAAA,OAAO,EAAEW,CAAC,IAAIf,aAAa,CAACE,MAAD,EAASE,GAAT,CAAnC;AAAkD,IAAA,IAAI,EAAC,QAAvD;AAAgE,IAAA,SAAS,EAAC,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVN,CAXF,CADJ;AA6BH,CAzCD;;AA2CAH,WAAW,CAACe,SAAZ,GAAwB;AACpBd,EAAAA,MAAM,EAAEN,SAAS,CAACqB,MAAV,CAAiBC,UADL;AAEpBf,EAAAA,OAAO,EAAEP,SAAS,CAACuB,MAAV,CAAiBD,UAFN;AAGpBT,EAAAA,IAAI,EAAEb,SAAS,CAACuB,MAAV,CAAiBD,UAHH;AAIpBlB,EAAAA,aAAa,EAAEJ,SAAS,CAACwB,IAAV,CAAeF;AAJV,CAAxB;;AAOA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADoB,CAAL,CAA7B;;AAIA,eAAeZ,OAAO,CAACwB,eAAD,EAAkB;AACtCrB,EAAAA;AADsC,CAAlB,CAAP,CAEZC,WAFY,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../redux/post';\n\nconst CommentItem = ({\n    postId,\n    comment: {\n        _id,\n        text,\n        name,\n        user,\n        date\n    },\n    auth,\n    deleteComment\n}) => {\n    return (\n        <div class=\"post bg-white p-1 my-1\" style={{\n          width: '500px',\n          background: '#C6C5C4',\n          maxHeight: '400px',\n          overflow: 'auto'\n        }}>\n          <div>\n            <Link to={`/profile/${user}`}>\n              <h4>{name}</h4>\n            </Link>\n          </div>\n          <div>\n            <p class=\"my-1\">\n              {text}\n            </p>\n             <p class=\"post-date\">\n                Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n            </p>\n\n            {/* if not loading and the user is the same one that posted the comment, then show the delete button  */}\n            {!auth.loading && user === auth.user._id && (\n                <button onClick={e => deleteComment(postId, _id)} type=\"button\" className=\"btn btn-danger\">\n                    <i className=\"fas fa-times\" />\n                </button>\n            )}\n          </div>\n        </div>\n    )\n}\n\nCommentItem.propTypes = {\n    postId: PropTypes.number.isRequired,\n    comment: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    deleteComment: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);\n"]},"metadata":{},"sourceType":"module"}