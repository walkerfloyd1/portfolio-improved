{"ast":null,"code":"(function () {\n  \"use strict\"; // modified from https://github.com/kriskowal/es5-shim\n\n  var has = Object.prototype.hasOwnProperty,\n      toString = Object.prototype.toString,\n      forEach = require('./foreach'),\n      isArgs = require('./isArguments'),\n      hasDontEnumBug = !{\n    'toString': null\n  }.propertyIsEnumerable('toString'),\n      hasProtoEnumBug = function () {}.propertyIsEnumerable('prototype'),\n      dontEnums = [\"toString\", \"toLocaleString\", \"valueOf\", \"hasOwnProperty\", \"isPrototypeOf\", \"propertyIsEnumerable\", \"constructor\"],\n      keysShim;\n\n  keysShim = function keys(object) {\n    var isObject = object !== null && typeof object === 'object',\n        isFunction = toString.call(object) === '[object Function]',\n        isArguments = isArgs(object),\n        theKeys = [];\n\n    if (!isObject && !isFunction && !isArguments) {\n      throw new TypeError(\"Object.keys called on a non-object\");\n    }\n\n    if (isArguments) {\n      forEach(object, function (value) {\n        theKeys.push(value);\n      });\n    } else {\n      var name,\n          skipProto = hasProtoEnumBug && isFunction;\n\n      for (name in object) {\n        if (!(skipProto && name === 'prototype') && has.call(object, name)) {\n          theKeys.push(name);\n        }\n      }\n    }\n\n    if (hasDontEnumBug) {\n      var ctor = object.constructor,\n          skipConstructor = ctor && ctor.prototype === object;\n      forEach(dontEnums, function (dontEnum) {\n        if (!(skipConstructor && dontEnum === 'constructor') && has.call(object, dontEnum)) {\n          theKeys.push(dontEnum);\n        }\n      });\n    }\n\n    return theKeys;\n  };\n\n  module.exports = keysShim;\n})();","map":null,"metadata":{},"sourceType":"script"}