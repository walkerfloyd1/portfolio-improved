{"ast":null,"code":"var _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../redux/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  showActions,\n  post: {\n    _id,\n    text,\n    name,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => {\n  state = {\n    show: false\n  };\n\n  showModal = () => {\n    this.ListeningStateChangedEvent({\n      show: true\n    });\n  };\n\n  hideModal = () => {\n    this.ListeningStateChangedEvent({\n      show: false\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profile/\".concat(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, date)), showActions && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => addLike(_id),\n    type: \"button\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, likes.length))), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: e => removeLike(_id),\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: this.showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Comments \", comments.length > 0 && React.createElement(\"span\", {\n    className: \"comment-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n    onClick: e => deletePost(_id),\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })))));\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","showActions","post","_id","text","name","user","likes","comments","date","state","show","showModal","ListeningStateChangedEvent","hideModal","e","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport {\n    addLike,\n    removeLike,\n    deletePost\n} from '../redux/post';\n\nconst PostItem = ({\n    addLike,\n    removeLike,\n    deletePost,\n    auth,\n    showActions,\n    post: {\n        _id,\n        text,\n        name,\n        user,\n        likes,\n        comments,\n        date\n    }\n}) => {\n\n    state = { show: false};\n\n    showModal = () => {\n      this.ListeningStateChangedEvent({\n        show: true\n      });\n    };\n\n    hideModal = () => {\n      this.ListeningStateChangedEvent({\n        show: false \n      })\n    }\n\n    return (\n        <div className=\"post bg-white p-1 my-1\">\n          <div>\n            <Link to={`/profile/${user}`}>\n              {/* <img\n                className=\"round-img\"\n                src={avatar}\n                alt=\"\"\n              /> */}\n              <h4>{name}</h4>\n            </Link>\n          </div>\n          <div>\n            <p className=\"my-1\">\n              {text}\n            </p>\n             <p className=\"post-date\">\n                Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n            </p>\n\n            {showActions && <Fragment>\n              <button onClick={e => addLike(_id)} type=\"button\" className=\"btn btn-light\">\n              <i className=\"fas fa-thumbs-up\"></i>{\" \"}\n              <span>{likes.length > 0 && (\n                  <span>{likes.length}</span>\n              )}</span>\n            </button>\n            <button type=\"button\" onClick={e => removeLike(_id)} className=\"btn btn-light\">\n              <i className=\"fas fa-thumbs-down\"></i>\n            </button>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={\n              this.showModal\n            }>\n              Comments {comments.length > 0 && (\n                  <span className='comment-count'>{comments.length}</span>\n              )}\n            </button>\n            {/* if post user is the same as the logged in user, show button */}\n            {!auth.loading && user === auth.user._id && (\n                <button onClick={e => deletePost(_id)}    \n                type=\"button\"\n                className=\"btn btn-danger\"\n              >\n                <i className=\"fas fa-times\" />\n              </button>\n            )}\n            </Fragment>}\n            \n            \n          </div>\n        </div>\n    )\n}\n\nPostItem.defaultProps = {\n    showActions: true\n}\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect( mapStateToProps, {\n    addLike,\n    removeLike,\n    deletePost\n})(PostItem);\n"]},"metadata":{},"sourceType":"module"}