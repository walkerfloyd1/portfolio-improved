{"ast":null,"code":"var _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/profiles/Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileItem from './ProfileItem';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../redux/profile';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Developers\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), \" Browse and connect with developers\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"No Profiles found...\")));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\nexport default Profiles;","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","ProfileItem","connect","getProfiles","Profiles","profile","profiles","length","map","_id","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AACdD,EAAAA,WADc;AAEdE,EAAAA,OAAO,EAAE;AACLC,IAAAA;AADK;AAFK,CAAD,KAKX;AACFP,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAGA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAIQ;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,wCAJR,EAOQ;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,QAAQ,CAACC,MAAT,GAAkB,CAAlB,GACGD,QAAQ,CAACE,GAAT,CAAaH,OAAO,IAChB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACI,GAA1B;AAA+B,IAAA,OAAO,EAAEJ,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,GAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALT,CAPR,CADJ;AAiBH,CA1BD;;AA4BAD,QAAQ,CAACM,SAAT,GAAqB;AACjBP,EAAAA,WAAW,EAAEH,SAAS,CAACW,IAAV,CAAeC,UADX;AAEjBP,EAAAA,OAAO,EAAEL,SAAS,CAACa,MAAV,CAAiBD;AAFT,CAArB;AAKA,eAAeR,QAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileItem from './ProfileItem';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../redux/profile';\n\nconst Profiles = ({\n    getProfiles,\n    profile: {\n        profiles\n    }\n}) => {\n    useEffect(() => {\n        getProfiles()\n    }, [getProfiles])\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                    Developers\n                </h1>\n                <p className=\"lead\">\n                    <i className=\"fab fa-connectdevelop\" /> Browse and connect with developers\n                </p>\n                <div className=\"profiles\">\n                    {profiles.length > 0 ? (\n                        profiles.map(profile => (\n                            <ProfileItem key={profile._id} profile={profile} />\n                        ))\n                    ) : (<h4>No Profiles found...</h4>)}\n                </div>\n        </Fragment>\n    )\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n}\n\nexport default Profiles\n"]},"metadata":{},"sourceType":"module"}