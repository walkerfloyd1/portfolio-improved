{"ast":null,"code":"var _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/GithubRepos.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass GithubRepos extends Component {\n  constructor() {\n    super();\n    this.state = {\n      repos: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.github.com/users/walkerfloyd1/repos\").then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" Github Repos will go here\");\n  }\n\n}\n\nexport default GithubRepos;","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/GithubRepos.js"],"names":["React","Component","axios","GithubRepos","constructor","state","repos","componentDidMount","fetch","then","response","json","data","console","log","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAChCG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,iDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAJD,EAKCG,KALD,CAKOC,KAAK,IAAI;AACZH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,KAPD;AAQH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ;AAGH;;AAvB+B;;AA0BpC,eAAed,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass GithubRepos extends Component {\n    constructor() {\n        super();\n        this.state = {\n            repos: [],\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.github.com/users/walkerfloyd1/repos\")\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n        })\n        .catch(error => {\n            console.error(error)\n        })\n    }\n\n    render() {\n        return (\n            <h1> Github Repos will go here</h1>\n        )\n    }\n}\n\nexport default GithubRepos;"]},"metadata":{},"sourceType":"module"}