{"ast":null,"code":"var _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/profiles/Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileItem from './ProfileItem';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../redux/profile';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Loading\") : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: \"profiles-list\",\n    style: {\n      marginTop: '0px',\n      position: \"fixed\",\n      width: '600px',\n      maxHeight: '400px',\n      overflow: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"No Profiles found...\")));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","ProfileItem","connect","getProfiles","List","ListItem","Profiles","profile","profiles","loading","marginTop","position","width","maxHeight","overflow","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AACdH,EAAAA,WADc;AAEdI,EAAAA,OAAO,EAAE;AACLC,IAAAA,QADK;AAELC,IAAAA;AAFK;AAFK,CAAD,KAMX;AACFV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAGA,SAAOM,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAH,GAGV,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,KAAK,EAAE;AACvCC,MAAAA,SAAS,EAAE,KAD4B;AAEvCC,MAAAA,QAAQ,EAAE,OAF6B;AAGvCC,MAAAA,KAAK,EAAE,OAHgC;AAIvCC,MAAAA,SAAS,EAAE,OAJ4B;AAKvCC,MAAAA,QAAQ,EAAE;AAL6B,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKN,QAAQ,CAACO,MAAT,GAAkB,CAAlB,GACGP,QAAQ,CAACQ,GAAT,CAAaT,OAAO,IAChB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACU,GAA1B;AAA+B,IAAA,OAAO,EAAEV,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,CADH,GAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAbT,CADR,CAHJ;AAqBH,CA/BD;;AAiCAD,QAAQ,CAACY,SAAT,GAAqB;AACjBf,EAAAA,WAAW,EAAEH,SAAS,CAACmB,IAAV,CAAeC,UADX;AAEjBb,EAAAA,OAAO,EAAEP,SAAS,CAACqB,MAAV,CAAiBD;AAFT,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BhB,EAAAA,OAAO,EAAEgB,KAAK,CAAChB;AADe,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,QAA1C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileItem from './ProfileItem';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../redux/profile';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nconst Profiles = ({\n    getProfiles,\n    profile: {\n        profiles,\n        loading\n    }\n}) => {\n    useEffect(() => {\n        getProfiles()\n    }, [getProfiles])\n    return loading ? <h1>\n        Loading\n    </h1> : (\n        <Fragment>\n                <List className=\"profiles-list\" style={{\n                marginTop: '0px',\n                position: \"fixed\",\n                width: '600px',\n                maxHeight: '400px',\n                overflow: 'auto'}}\n                >\n                    {profiles.length > 0 ? (\n                        profiles.map(profile => (\n                            <ListItem>\n                            <ProfileItem key={profile._id} profile={profile} />\n                            </ListItem>\n                        ))\n                    ) : (<h4>No Profiles found...</h4>)}\n                </List>\n        </Fragment>\n    )\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles)\n"]},"metadata":{},"sourceType":"module"}