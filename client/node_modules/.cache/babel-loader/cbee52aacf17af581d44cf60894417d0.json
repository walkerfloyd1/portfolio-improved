{"ast":null,"code":"import _slicedToArray from \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/pages/Posts.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../Components/social/redux/post';\nimport PostItem from '../Components/social/posts/PostItem';\nimport PostForm from '../Components/social/posts/PostForm';\nimport CommentForm from '../Components/social/post/CommentForm';\nimport CommentItem from '../Components/social/post/CommentItem'; // Make it so comments only show up if you click on Comments\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 1),\n        displayComments = _useState2[0];\n\n  return loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Loading\") : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Community\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), \" See who's posting!\"), React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), displayComment && React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, posts.map(post => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(PostItem, {\n    key: post._id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, post.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))), React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })))));\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/pages/Posts.js"],"names":["React","Fragment","useEffect","useState","PropTypes","connect","getPosts","PostItem","PostForm","CommentForm","CommentItem","Posts","post","posts","loading","displayComments","displayComment","map","_id","comments","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,WAAP,MAAwB,uCAAxB,C,CAEA;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACXL,EAAAA,QADW;AAEXM,EAAAA,IAAI,EAAE;AACFC,IAAAA,KADE;AAEFC,IAAAA;AAFE;AAFK,CAAD,KAMR;AACFZ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AADE,oBAOEH,QAAQ,CAAC,KAAD,CAPV;AAAA;AAAA,QAMEY,eANF;;AAUF,SAAOD,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAH,GAGV,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAII;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,wBAJJ,EAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQKE,cAAc,IAAI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACdH,KAAK,CAACI,GAAN,CAAUL,IAAI,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACM,GAApB;AAAyB,IAAA,IAAI,EAAEN,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACO,QAAL,CAAcF,GAAd,CAAkBG,OAAO,IAC1B,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACF,GAA1B;AAA+B,IAAA,OAAO,EAAEE,OAAxC;AAAiD,IAAA,MAAM,EAAER,IAAI,CAACM,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADL,CAFA,EAOA,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEN,IAAI,CAACM,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CADH,CADc,CARvB,CAHJ;AA0BH,CA1CD;;AA4CAP,KAAK,CAACU,SAAN,GAAkB;AACdf,EAAAA,QAAQ,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADX;AAEdX,EAAAA,IAAI,EAAER,SAAS,CAACoB,MAAV,CAAiBD;AAFT,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADkB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACoB,eAAD,EAAkB;AACpCnB,EAAAA;AADoC,CAAlB,CAAP,CAEZK,KAFY,CAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../Components/social/redux/post';\nimport PostItem from '../Components/social/posts/PostItem';\nimport PostForm from '../Components/social/posts/PostForm';\nimport CommentForm from '../Components/social/post/CommentForm';\nimport CommentItem from '../Components/social/post/CommentItem';\n\n// Make it so comments only show up if you click on Comments\n\nconst Posts = ({\n    getPosts,\n    post: {\n        posts,\n        loading\n    }\n}) => {\n    useEffect(() => {\n        getPosts();\n    }, [getPosts])\n\n    const [\n        displayComments,\n    ] = useState(false);\n\n\n    return loading ? <h1>\n        Loading\n    </h1> : (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Community\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\" /> See who's posting!\n            </p>\n            <PostForm />\n            {displayComment && <div className=\"posts\">\n                {posts.map(post => (\n                    <div>\n                    <PostItem key={post._id} post={post} />\n                    <div className=\"comments\">\n                        {post.comments.map(comment => (\n                        <CommentItem key={comment._id} comment={comment} postId={post._id} />\n                        ))}\n                    </div>\n                    <CommentForm postId={post._id} />\n                    </div>\n                ))}\n            </div>}\n        </Fragment>\n    )\n}\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    post: state.post\n})\n\nexport default connect(mapStateToProps, {\n    getPosts\n})(Posts)\n"]},"metadata":{},"sourceType":"module"}