{"ast":null,"code":"var _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/spotify/Spotify.js\";\nimport React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport Player from \"./Player\";\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\nconst clientId = \"a26dcec68daa487f88549142b69d5b49\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"];\nconst hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = \"\";\n\nclass Spotify extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{\n            url: \"\"\n          }]\n        },\n        name: \"\",\n        artists: [{\n          name: \"\"\n        }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  componentDidMount() {\n    let _token = hash.access_token;\n\n    if (_token) {\n      this.setState({\n        token: _token\n      });\n    }\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"spotify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"spotify-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, !this.state.token && React.createElement(\"a\", {\n      className: \"btn btn--loginApp-link\",\n      href: \"\".concat(authEndpoint, \"client_id=\").concat(clientId, \"&redirect_uri=\").concat(redirectUri, \"&scope=\").concat(scopes.join(\"%20\"), \"&response_type=token&show_dialog=true\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Login to Spotify\"), this.state.token && React.createElement(Player, {\n      item: this.state.item,\n      is_playing: this.state.is_playing,\n      progress_ms: this.progress_ms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Spotify;","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/spotify/Spotify.js"],"names":["React","Component","$","Player","authEndpoint","clientId","redirectUri","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","Spotify","constructor","state","token","album","images","url","name","artists","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","bind","componentDidMount","_token","access_token","setState","ajax","type","beforeSend","xhr","setRequestHeader","success","data","render","join"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport Player from \"./Player\";\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n\nconst clientId = \"a26dcec68daa487f88549142b69d5b49\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n];\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\n\nclass Spotify extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms:0,\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  \n\n    componentDidMount() {\n        let _token = hash.access_token;\n        if (_token) {\n          this.setState({\n            token: _token\n          });\n        }\n      }\n      getCurrentlyPlaying(token) {\n        // Make a call using the token\n        $.ajax({\n          url: \"https://api.spotify.com/v1/me/player\",\n          type: \"GET\",\n          beforeSend: (xhr) => {\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n          },\n          success: (data) => {\n            this.setState({\n              item: data.item,\n              is_playing: data.is_playing,\n              progress_ms: data.progress_ms,\n            });\n          }\n        });\n      }\n    render() {\n        return (\n            <div className=\"spotify\">\n      <header className=\"spotify-header\">\n      {!this.state.token && (\n        <a\n          className=\"btn btn--loginApp-link\"\n          href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n        >\n          Login to Spotify\n        </a>\n      )}\n      {this.state.token && (\n        <Player\n        item={this.state.item}\n        is_playing={this.state.is_playing}\n        progress_ms={this.progress_ms}\n      />\n      )}\n      </header>\n    </div>\n        );\n    }\n}\n\nexport default Spotify;\n\n"]},"metadata":{},"sourceType":"module"}