{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar is = require('is');\n\nvar Promise = require('q');\n\nvar fs = require('fs');\n\nvar Resource = require('./resource');\n/**\n * Model to represent an asset in an release.\n * @type {Resource}\n */\n\n\nvar ReleaseAsset = function (_Resource) {\n  _inherits(ReleaseAsset, _Resource);\n\n  function ReleaseAsset(client, release, id) {\n    _classCallCheck(this, ReleaseAsset);\n\n    var _this = _possibleConstructorReturn(this, (ReleaseAsset.__proto__ || Object.getPrototypeOf(ReleaseAsset)).call(this, client));\n\n    _this.release = release;\n    _this.id = id;\n    _this._infos = null;\n    return _this;\n  }\n  /**\n   * Return API endpoint for this asset.\n   */\n\n\n  _createClass(ReleaseAsset, [{\n    key: 'url',\n    value: function url() {\n      return this.release.repo.url('releases/assets/' + this.id);\n    } // Get details about this asset\n\n  }, {\n    key: 'info',\n    value: function info() {\n      return this.get('').get('body');\n    }\n    /**\n     * Download this asset into a file \"output\"\n     * @param  {String|Stream} output\n     * @return {Promise}\n     */\n\n  }, {\n    key: 'download',\n    value: function download(output) {\n      var d = Promise.defer(); // Normalize to a stream\n\n      if (is.string(output)) {\n        output = fs.createReadStream(output);\n      }\n\n      output.on('error', function (err) {\n        d.reject(err);\n      });\n      this.client.get(this.url(), {}, {\n        json: false,\n        headers: {\n          'Accept': 'application/octet-stream'\n        },\n        process: function process(r) {\n          r.pipe(output);\n        }\n      }).then(function () {\n        d.resolve();\n      }, function (err) {\n        d.reject(err);\n      });\n      return d.promise;\n    }\n  }]);\n\n  return ReleaseAsset;\n}(Resource);\n\nmodule.exports = ReleaseAsset;","map":null,"metadata":{},"sourceType":"script"}