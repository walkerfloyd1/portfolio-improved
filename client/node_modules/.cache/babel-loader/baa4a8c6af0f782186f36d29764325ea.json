{"ast":null,"code":"import _objectWithoutProperties from \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/routing/PrivateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      _ref$auth = _ref.auth,\n      isAuthenticated = _ref$auth.isAuthenticated,\n      loading = _ref$auth.loading,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"auth\"]);\n\n  return (//If user is not authenticated, redirect to login.\n    //If they are authenticated then component will load\n    React.createElement(Route, Object.assign({}, rest, {\n      render: props => !isAuthenticated && !loading ? React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }) : React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }))\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/routing/PrivateRoute.js"],"names":["React","PropTypes","Route","Redirect","connect","PrivateRoute","Component","component","auth","isAuthenticated","loading","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,uBAAyBC,IAAzB;AAAA,MAAgCC,eAAhC,aAAgCA,eAAhC;AAAA,MAAiDC,OAAjD,aAAiDA,OAAjD;AAAA,MAA8DC,IAA9D;;AAAA,SACjB;AACA;AACA,wBAAC,KAAD,oBAAWA,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,IAAI,CAACH,eAAD,IAAoB,CAACC,OAArB,GAClC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADkC,GAG9B,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHiB;AAAA,CAArB;;AASAP,YAAY,CAACQ,SAAb,GAAyB;AACrBL,EAAAA,IAAI,EAAEP,SAAS,CAACa,MAAV,CAAiBC;AADF,CAAzB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADkB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth: {isAuthenticated, loading}, ...rest}) => (\n    //If user is not authenticated, redirect to login.\n    //If they are authenticated then component will load\n    <Route {...rest} render={props => !isAuthenticated && !loading ? (\n    <Redirect to=\"/login\" \n        />) : (\n        <Component {...props} />)} />\n)\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}