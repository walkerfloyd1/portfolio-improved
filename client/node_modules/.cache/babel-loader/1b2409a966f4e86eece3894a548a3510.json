{"ast":null,"code":"import _slicedToArray from \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/post/CommentForm.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../redux/post';\n\nconst CommentForm = ({\n  postId,\n  addComment\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  return React.createElement(\"div\", {\n    class: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    class: \"form my-1\",\n    onSubmit: e => {\n      e.preventDefault();\n      addComment(postId, {\n        text\n      });\n      setText('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"text\",\n    cols: \"30\",\n    rows: \"5\",\n    style: {\n      \"width\": \"25%\",\n      \"height\": \"25%\"\n    },\n    placeholder: \"Comment\",\n    required: true,\n    value: text,\n    onChange: e => setText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    class: \"btn btn-dark my-1\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addComment\n})(CommentForm);","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/post/CommentForm.js"],"names":["React","useState","PropTypes","connect","addComment","CommentForm","postId","text","setText","e","preventDefault","target","value","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AACjBC,EAAAA,MADiB;AAEjBF,EAAAA;AAFiB,CAAD,KAGd;AAAA,oBACsBH,QAAQ,CAAC,EAAD,CAD9B;AAAA;AAAA,QACKM,IADL;AAAA,QACWC,OADX;;AAGF,SACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,IAAA,KAAK,EAAC,WAAZ;AAAwB,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACnCA,MAAAA,CAAC,CAACC,cAAF;AACAN,MAAAA,UAAU,CAACE,MAAD,EAAS;AAAEC,QAAAA;AAAF,OAAT,CAAV;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,IAAI,EAAC,GAHP;AAIE,IAAA,KAAK,EAAI;AACP,eAAS,KADF;AAEP,gBAAU;AAFH,KAJX;AAQE,IAAA,WAAW,EAAC,SARd;AASE,IAAA,QAAQ,MATV;AAUE,IAAA,KAAK,EAAED,IAVT;AAWE,IAAA,QAAQ,EAAEE,CAAC,IAAID,OAAO,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CAXxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAkBE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,mBAA3B;AAA+C,IAAA,KAAK,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADA,CADJ;AAwBH,CA9BD;;AAgCAP,WAAW,CAACQ,SAAZ,GAAwB;AACpBT,EAAAA,UAAU,EAAEF,SAAS,CAACY,IAAV,CAAeC;AADP,CAAxB;AAIA,eAAeZ,OAAO,CAAC,IAAD,EAAO;AACzBC,EAAAA;AADyB,CAAP,CAAP,CAEZC,WAFY,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../redux/post';\n\n\nconst CommentForm = ({\n    postId,\n    addComment\n}) => {\n    const [text, setText] = useState('');\n\n    return (\n        <div class=\"post-form\">\n        <form class=\"form my-1\" onSubmit={e => {\n            e.preventDefault();\n            addComment(postId, { text });\n            setText('');\n        }}>\n          <textarea\n            name=\"text\"\n            cols=\"30\"\n            rows=\"5\"\n            style = {{\n              \"width\": \"25%\",\n              \"height\": \"25%\"\n            }}\n            placeholder=\"Comment\"\n            required\n            value={text}\n            onChange={e => setText(e.target.value)}\n          ></textarea>\n          <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n}\n\nCommentForm.propTypes = {\n    addComment: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {\n    addComment\n})(CommentForm);\n"]},"metadata":{},"sourceType":"module"}