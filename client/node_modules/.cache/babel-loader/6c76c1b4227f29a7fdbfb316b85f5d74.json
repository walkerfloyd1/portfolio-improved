{"ast":null,"code":"var _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/profile/UserProfile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getProfileById } from '../redux/profile';\nimport Spinner from '../../Spinner';\nimport Navbar from '../../Navbar';\nimport Footer from '../../Footer';\n\nconst UserProfile = ({\n  getProfileById,\n  match,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Create your Profile\") : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Back to Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    class: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Bio\"), profile.bio ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, profile.bio) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"No Bio\"))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nUserProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(UserProfile);","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/social/profile/UserProfile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","getProfileById","Spinner","Navbar","Footer","UserProfile","match","auth","profile","loading","params","id","isAuthenticated","user","_id","bio","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACjBJ,EAAAA,cADiB;AAEjBK,EAAAA,KAFiB;AAGjBC,EAAAA,IAHiB;AAIjBC,EAAAA,OAAO,EAAE;AACLA,IAAAA,OADK;AAELC,IAAAA;AAFK;AAJQ,CAAD,KAQd;AACFZ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,cAAc,CAACK,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAd;AACH,GAFQ,EAEN,CAACV,cAAD,CAFM,CAAT;AAGA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GACD,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,iBAAT;AAA2B,IAAA,SAAS,EAAC,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADC,GAID,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA,EAKCF,IAAI,CAACK,eAAL,IAAwBL,IAAI,CAACE,OAAL,KAAiB,KAAzC,IAAkDF,IAAI,CAACM,IAAL,CAAUC,GAAV,KAAkBN,OAAO,CAACK,IAAR,CAAaC,GAAjF,IAEG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,EAWA;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEKN,OAAO,CAACO,GAAR,GACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,OAAO,CAACO,GADb,CADH,GAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANT,CADR,CAXA,EAsBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CALJ,CADJ;AAiCH,CA7CD;;AA+CAV,WAAW,CAACW,SAAZ,GAAwB;AACpBf,EAAAA,cAAc,EAAEH,SAAS,CAACmB,IAAV,CAAeC,UADX;AAEpBV,EAAAA,OAAO,EAAEV,SAAS,CAACqB,MAAV,CAAiBD,UAFN;AAGpBX,EAAAA,IAAI,EAAET,SAAS,CAACqB,MAAV,CAAiBD;AAHH,CAAxB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,OAAO,EAAEa,KAAK,CAACb,OADe;AAE9BD,EAAAA,IAAI,EAAEc,KAAK,CAACd;AAFkB,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA6CI,WAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getProfileById } from '../redux/profile';\n\nimport Spinner from '../../Spinner';\n\nimport Navbar from '../../Navbar';\n\nimport Footer from '../../Footer';\n\nconst UserProfile = ({\n    getProfileById,\n    match,\n    auth,\n    profile: {\n        profile,\n        loading\n    }\n}) => {\n    useEffect(() => {\n        getProfileById(match.params.id);\n    }, [getProfileById])\n    return (\n        <Fragment>\n            {profile === null || loading ? \n            <Link to=\"/create-profile\" className=\"btn btn-light\">\n                Create your Profile\n            </Link> :\n            <Fragment>\n            <Navbar />\n            <Link to=\"/posts\" className=\"btn btn-light\">\n                Back to Profiles\n            </Link>\n            {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id \n            && (\n                <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                    Edit Profile\n                </Link>\n            )}\n            <div class=\"profile-grid my-1\">\n                    <div className=\"profile-exp bg-white p-2\">\n                        <h2 className=\"text-primary\">Bio</h2>\n                        {profile.bio ? (\n                            <Fragment>\n                                {profile.bio}\n                            </Fragment>\n                        ) : (<h4>No Bio</h4>)}\n                    </div>\n                    \n                </div>\n                <Footer />\n            </Fragment>\n        }\n        </Fragment>\n    )\n}\n\nUserProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getProfileById })(UserProfile);\n"]},"metadata":{},"sourceType":"module"}