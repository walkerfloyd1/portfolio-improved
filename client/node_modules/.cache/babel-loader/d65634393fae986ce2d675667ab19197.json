{"ast":null,"code":"// Copyright 2015 Joyent, Inc.\nvar assert = require('assert-plus');\n\nvar crypto = require('crypto'); ///--- Exported API\n\n\nmodule.exports = {\n  /**\n   * Verify RSA/DSA signature against public key.  You are expected to pass in\n   * an object that was returned from `parse()`.\n   *\n   * @param {Object} parsedSignature the object you got from `parse`.\n   * @param {String} pubkey RSA/DSA private key PEM.\n   * @return {Boolean} true if valid, false otherwise.\n   * @throws {TypeError} if you pass in bad arguments.\n   */\n  verifySignature: function verifySignature(parsedSignature, pubkey) {\n    assert.object(parsedSignature, 'parsedSignature');\n    assert.string(pubkey, 'pubkey');\n    var alg = parsedSignature.algorithm.match(/^(RSA|DSA)-(\\w+)/);\n    if (!alg || alg.length !== 3) throw new TypeError('parsedSignature: unsupported algorithm ' + parsedSignature.algorithm);\n    var verify = crypto.createVerify(alg[0]);\n    verify.update(parsedSignature.signingString);\n    return verify.verify(pubkey, parsedSignature.params.signature, 'base64');\n  },\n\n  /**\n   * Verify HMAC against shared secret.  You are expected to pass in an object\n   * that was returned from `parse()`.\n   *\n   * @param {Object} parsedSignature the object you got from `parse`.\n   * @param {String} secret HMAC shared secret.\n   * @return {Boolean} true if valid, false otherwise.\n   * @throws {TypeError} if you pass in bad arguments.\n   */\n  verifyHMAC: function verifyHMAC(parsedSignature, secret) {\n    assert.object(parsedSignature, 'parsedHMAC');\n    assert.string(secret, 'secret');\n    var alg = parsedSignature.algorithm.match(/^HMAC-(\\w+)/);\n    if (!alg || alg.length !== 2) throw new TypeError('parsedSignature: unsupported algorithm ' + parsedSignature.algorithm);\n    var hmac = crypto.createHmac(alg[1].toUpperCase(), secret);\n    hmac.update(parsedSignature.signingString);\n    return hmac.digest('base64') === parsedSignature.params.signature;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}