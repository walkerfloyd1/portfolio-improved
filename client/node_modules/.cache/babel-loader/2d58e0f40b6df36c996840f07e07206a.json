{"ast":null,"code":"import _slicedToArray from \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/webpages/Posts.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../Components/social/redux/post';\nimport PostItem from '../Components/social/posts/PostItem';\nimport PostForm from '../Components/social/posts/PostForm';\nimport CommentItem from '../Components/social/post/CommentItem';\nimport Navbar from '../Components/Navbar';\nimport Footer from '../Components/Footer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport Profiles from '../Components/social/profiles/Profiles'; // Make it so comments only show up if you click on Comments\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  },\n  isAuthenticated\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 1),\n        displayComments = _useState2[0];\n\n  if (!isAuthenticated) {\n    React.createElement(Redirect, {\n      to: \"/landing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  } else {}\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(PostForm, {\n    style: {\n      top: '50px',\n      position: 'fixed'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(List, {\n    className: \"posts\",\n    style: {\n      marginTop: '0px',\n      position: \"fixed\",\n      top: '50px',\n      left: '50%',\n      width: '500px',\n      marginRight: '10%',\n      maxHeight: '600px',\n      overflow: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Community Feed\"), posts.map(post => React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(PostItem, {\n    key: post._id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), displayComments && React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, post.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))))))), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Connect\"), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Profiles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }));\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/webpages/Posts.js"],"names":["React","Fragment","useEffect","useState","Redirect","PropTypes","connect","getPosts","PostItem","PostForm","CommentItem","Navbar","Footer","List","ListItem","Grid","Profiles","Posts","post","posts","loading","isAuthenticated","displayComments","top","position","marginTop","left","width","marginRight","maxHeight","overflow","map","_id","comments","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../Components/social/redux/post';\nimport PostItem from '../Components/social/posts/PostItem';\nimport PostForm from '../Components/social/posts/PostForm';\nimport CommentItem from '../Components/social/post/CommentItem';\nimport Navbar from '../Components/Navbar';\nimport Footer from '../Components/Footer';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Profiles from '../Components/social/profiles/Profiles';\n\n// Make it so comments only show up if you click on Comments\n\nconst Posts = ({\n    getPosts,\n    post: {\n        posts,\n        loading\n    },\n    isAuthenticated\n}) => {\n    useEffect(() => {\n        getPosts();\n    }, [getPosts])\n\n    const [\n        displayComments,\n    ] = useState(false);\n\n\n    if (!isAuthenticated) {\n    <Redirect to=\"/landing\" /> }\n    else {}\n    return (\n    <div>\n        <Navbar />\n        <Grid container\n            direction=\"column\"\n            justify=\"center\">\n            <Grid item md={6}>\n                \n                <PostForm style={{\n                    top: '50px',\n                    position: 'fixed'\n                }}/>\n                <List className=\"posts\" style={{\n                marginTop: '0px',\n                position: \"fixed\",\n                top: '50px',\n                left: '50%',\n                width: '500px',\n                marginRight: '10%',\n                maxHeight: '600px',\n                overflow: 'auto'\n            }}>\n                <h1>\n                    Community Feed\n                </h1>\n                {posts.map(post => (\n                    <ListItem>\n                    <PostItem key={post._id} post={post} />\n                    {displayComments && \n                    <div className=\"comments\">\n                        {post.comments.map(comment => (\n                        <CommentItem key={comment._id} comment={comment} postId={post._id} />\n                        ))}\n                    </div> }\n                    </ListItem>\n                ))}\n            </List>\n            </Grid>\n            <h1>\n                Connect\n            </h1>\n            <Grid item md={6}>\n                <Profiles />\n            </Grid>\n        </Grid>\n        <Footer />\n    </div>\n    )\n}\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    post: state.post\n})\n\nexport default connect(mapStateToProps, {\n    getPosts\n})(Posts)\n"]},"metadata":{},"sourceType":"module"}