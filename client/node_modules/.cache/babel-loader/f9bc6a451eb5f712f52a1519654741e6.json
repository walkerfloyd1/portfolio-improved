{"ast":null,"code":"var _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/App.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport Register from '../pages/register';\nimport Landing from './pages/Landing';\nimport Routes from './routing/Routes';\nimport { loadUser } from './Components/social/redux/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport store from './store';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    component: Register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Landing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Route, {\n    component: Routes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/App.js"],"names":["React","Fragment","useEffect","BrowserRouter","Router","Route","Switch","Provider","Register","Landing","Routes","loadUser","setAuthToken","store","localStorage","token","App","dispatch","Login"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAO,WAAP;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,SAASC,QAAT,QAAyB,gCAAzB;AAEA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBH,EAAAA,YAAY,CAACE,YAAY,CAACC,KAAd,CAAZ;AACD;;AAED,MAAMC,GAAG,GAAG,MAAM;AAChBd,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAACI,QAAN,CAAeN,QAAQ,EAAvB;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEL,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEU,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAET,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADA,CADF,CADA,CADF;AAcD,CAlBD;;AAoBA,eAAeM,GAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\nimport { Provider } from 'react-redux';\n\nimport Register from '../pages/register';\n\nimport Landing from './pages/Landing';\n\nimport Routes from './routing/Routes';\n\nimport { loadUser } from './Components/social/redux/auth';\n\nimport setAuthToken from './utils/setAuthToken';\n\nimport store from './store';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, [])\n  return (\n    <Provider store={store}>\n    <Router>\n      <Fragment>\n      <Switch>\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/\" component={Landing} />\n        <Route component={Routes} />\n      </Switch>\n    </Fragment>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}