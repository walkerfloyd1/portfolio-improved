{"ast":null,"code":"var _jsxFileName = \"/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/GithubRepos.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from './social/redux/profile';\n\nconst GithubRepos = ({\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos();\n  }, [getGithubRepos]);\n  return React.createElement(\"div\", {\n    className: \"profile-github\",\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Github Repos\"), React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      maxHeight: '400px',\n      overflow: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, repos === null ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Loading\") : repos.map(repo => React.createElement(\"div\", {\n    key: repo._id,\n    className: \"repo bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: repo.html_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, repo.name)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, repo.description)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Stars: \", repo.stargazers_count), React.createElement(\"li\", {\n    className: \"badge badge-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Watchers: \", repo.watchers_count), React.createElement(\"li\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Forks: \", repo.forks_count)))))));\n};\n\nGithubRepos.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(GithubRepos);","map":{"version":3,"sources":["/Users/walkerfloyd/Desktop/Web-Development/my-new-portfolio/client/src/Components/GithubRepos.js"],"names":["React","useEffect","PropTypes","connect","getGithubRepos","GithubRepos","repos","maxHeight","overflow","map","repo","_id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","func","isRequired","array","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,wBAA/B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAED,EAAAA,cAAF;AAAkBE,EAAAA;AAAlB,CAAD,KAA8B;AAC9CL,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,cAAc;AACjB,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAGA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAKI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAC1BG,MAAAA,SAAS,EAAE,OADe;AAE1BC,MAAAA,QAAQ,EAAE;AAFgB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAICF,KAAK,KAAK,IAAV,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAjB,GAEGA,KAAK,CAACG,GAAN,CAAUC,IAAI,IACV;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,IAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAED,IAAI,CAACE,QAAd;AAAwB,IAAA,MAAM,EAAC,QAA/B;AAAwC,IAAA,GAAG,EAAC,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACG,IADV,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,CAACI,WADV,CANJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACYJ,IAAI,CAACK,gBADjB,CADJ,EAII;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeL,IAAI,CAACM,cADpB,CAJJ,EAOI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACYN,IAAI,CAACO,WADjB,CAPJ,CADJ,CAXJ,CADJ,CANJ,CALJ,CADJ;AA2CH,CA/CD;;AAiDAZ,WAAW,CAACa,SAAZ,GAAwB;AACpBd,EAAAA,cAAc,EAAEF,SAAS,CAACiB,IAAV,CAAeC,UADX;AAEpBd,EAAAA,KAAK,EAAEJ,SAAS,CAACmB,KAAV,CAAgBD;AAFH,CAAxB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BjB,EAAAA,KAAK,EAAEiB,KAAK,CAACC,OAAN,CAAclB;AADS,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,WAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from './social/redux/profile';\n\nconst GithubRepos = ({ getGithubRepos, repos}) => {\n    useEffect(() => {\n        getGithubRepos()\n    }, [getGithubRepos]);\n    return (\n        <div className=\"profile-github\" style={{\n        }}>\n            <h1>\n                Github Repos\n            </h1>\n            <div className=\"container\" style={{\n                    maxHeight: '400px',\n                    overflow: 'auto',\n                }}>\n            {repos === null ? <h1>Loading</h1> : (\n                \n                repos.map(repo => (\n                    <div key={repo._id} className=\"repo bg-white p-1 my-1\">\n                        <div>\n                            <h4>\n                                <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\n                                    {repo.name}\n                                </a>\n                            </h4>\n                            <p>\n                                {repo.description}\n                            </p>\n                        </div>\n                        <div>\n                            <ul>\n                                <li className=\"badge badge-primary\">\n                                    Stars: {repo.stargazers_count}\n                                </li>\n                                <li className=\"badge badge-dark\">\n                                    Watchers: {repo.watchers_count}\n                                </li>\n                                <li className=\"badge badge-light\">\n                                    Forks: {repo.forks_count}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                ))\n            )}\n        </div>\n    </div>\n    )\n}\n\nGithubRepos.propTypes = {\n    getGithubRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    repos: state.profile.repos\n})\n\nexport default connect(mapStateToProps, { getGithubRepos })(GithubRepos)"]},"metadata":{},"sourceType":"module"}